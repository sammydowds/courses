// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    //setting up registers, and wiring load bits 
    // Register 1
    Register(in=in, load=load0, out=reg0);
    // Register 2
    Register(in=in, load=load1, out=reg1);
    // Register 3
    Register(in=in, load=load2, out=reg2);
    // Register 4
    Register(in=in, load=load3, out=reg3);
    // Register 5
    Register(in=in, load=load4, out=reg4);
    // Register 6
    Register(in=in, load=load5, out=reg5);
    // Register 7
    Register(in=in, load=load6, out=reg6);
    // Register 8
    Register(in=in, load=load7, out=reg7);

    //assigning load value as high for given address
    DMux8Way(in=load, sel=address, a=load0, b=load1, c=load2, d=load3, e=load4, f=load5, g=load6, h=load7);

    //Outputting register
    Mux8Way16(a=reg0, b=reg1, c=reg2, d=reg3, e=reg4, f=reg5, g=reg6, h=reg7, sel=address, out=out);


}
