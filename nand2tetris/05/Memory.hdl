// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O.
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory
 * location specified by address. If load==1, the in value is loaded
 * into the memory location specified by address. This value becomes
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used.
 * Access to address>0x6000 is invalid. Access to any address in
 * the range 0x4000-0x5FFF results in accessing the screen memory
 * map. Access to address 0x6000 results in accessing the keyboard
 * memory map. The behavior in these addresses is described in the
 * Screen and Keyboard chip specifications given in the book.
 **/

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    //processing - selecting what to load into memory
    DMux4Way(in=load, sel=address[13..14], a=loadRamA, b=loadRamB, c=loadScreen, d=loadKbd);

    //if address is below 0000 000 to 0011 FFF (16383) go to RAM
    Or(a=loadRamA, b=loadRamB, out=loadRam);
    RAM16K(in=in, load=loadRam, address=address[0..13], out=ramOut);

    //if address is above 0100 000 (16384) and below 0101 FFF (24575) go to screen
    Screen(in=in, load=loadScreen, address=address[0..12], out=screenOut);

    //if address is 0110 000 (24576) go to keyboard
    Keyboard(out=kbdOut);

    //Selecting what to output
    Mux4Way16(a=ramOut, b=ramOut, c=screenOut, d=kbdOut, sel=address[13..14], out=out);

}
